{
  "command": "agbenchmark start",
  "git_commit_sha": "2fc70aa0032eec986dfb1020854a1b3b8aaf6780",
  "completion_time": "2023-08-02-03:24",
  "benchmark_start_time": "2023-08-02-03:12",
  "metrics": {
    "run_time": "679.26 seconds",
    "highest_difficulty": "intermediate: 4"
  },
  "tests": {
    "TestWriteFile": {
      "data_path": "agbenchmark/challenges/interface/write_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Print the the capital of America to a .txt file",
      "answer": "Washington",
      "description": "Tests the writing to file",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.025040999999999997,
        "run_time": "14.562 seconds"
      },
      "reached_cutoff": false
    },
    "TestPlanCreation": {
      "data_path": "agbenchmark/challenges/content_gen/2_plan/data.json",
      "is_regression": false,
      "category": [
        "content_gen"
      ],
      "task": "As an agent powered by a large language model, create a plan for yourself to execute on based on the task of booking a flight to Toronto. Output this plan into a .txt file.",
      "answer": "1. Search for flights to Toronto.\n2. Select the cheapest flight.\n3. Book the flight.\n4. Pay for the flight.\n5. Confirm the flight.",
      "description": "Tests ability to generate content based on the content of 2 files.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "success_%": 70,
        "cost": 0.2000725,
        "run_time": "50.399 seconds"
      },
      "reached_cutoff": false
    },
    "TestSearch": {
      "data_path": "agbenchmark/challenges/interface/search/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Open 'https://silennaihin.com/random/plain.html' and paste the text on the page in a .txt file",
      "answer": "This is a Heading\nThis is a paragraph.",
      "description": "Tests if an llm can search",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.08129050000000002,
        "run_time": "23.54 seconds"
      },
      "reached_cutoff": false
    },
    "TestReadFile": {
      "data_path": "agbenchmark/challenges/interface/read_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Write the string 'random string' before any existing text to the file called file_to_check.txt",
      "answer": "random string Hello World!",
      "description": "This reads the file quickly",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.0528125,
        "run_time": "24.421 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2_debug/data.json",
      "is_regression": true,
      "category": [
        "code",
        "iterate"
      ],
      "task": "1- Run test.py.\n2- Read code.py.\n3- Modify code.py.\nRepeat step 1, 2 and 3 until test.py runs without errors.\n",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "success_%": 100,
        "cost": 0.135254,
        "run_time": "40.135 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithoutGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.1_vague/data.json",
      "is_regression": true,
      "category": [
        "code",
        "iterate"
      ],
      "task": "Make test.py run without errors.",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it, using a very broad prompt without guidance",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "success_%": 77.78,
        "cost": 0.3014365,
        "run_time": "75.632 seconds"
      },
      "reached_cutoff": true
    },
    "TestAdaptSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/adapatability/a1_debug/data.json",
      "is_regression": true,
      "category": [
        "adaptability"
      ],
      "task": "1- Run code.py.\n2- Read test.py.\n3- Modify test.py.\nRepeat step 1, 2 and 3 until code.py runs without errors.\n",
      "answer": "Same as the original DebugWithGuidance test - [0, 1] [2, 5] [0, 3]",
      "description": "A version of the debug challenge where the wrong files to test and change are given. The llm must figure the challenges out",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "success_%": 44.44,
        "cost": 0.4991325,
        "run_time": "81.648 seconds"
      },
      "reached_cutoff": true
    }
  },
  "config": {
    "workspace": "${os.path.join(Path.home(), 'miniagi')}"
  }
}