{
  "command": "agbenchmark start",
  "benchmark_git_commit_sha": "https://github.com/Significant-Gravitas/Auto-GPT-Benchmarks/tree/e615dda22c60b5fc0280ddbef16204927ba7d285",
  "agent_git_commit_sha": "https://github.com/SilenNaihin/mini-agi/tree/2fc70aa0032eec986dfb1020854a1b3b8aaf6780",
  "completion_time": "2023-08-07-08:33",
  "benchmark_start_time": "2023-08-07-08:13",
  "metrics": {
    "run_time": "1148.35 seconds",
    "highest_difficulty": "basic: 2"
  },
  "tests": {
    "TestWriteFile": {
      "data_path": "agbenchmark/challenges/interface/write_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Write the word 'Washington' to a .txt file",
      "answer": "The word 'Washington', printed to a .txt file named anything",
      "description": "Tests the agents ability to write to a file",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 100,
        "cost": 0.053343999999999996,
        "run_time": "23.805 seconds"
      },
      "reached_cutoff": false
    },
    "TestSearch": {
      "data_path": "agbenchmark/challenges/interface/search/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Open 'https://silennaihin.com/random/plain.html' and paste the text on the page in a .txt file",
      "answer": "This is a Heading\nThis is a paragraph.",
      "description": "Tests if an llm can search",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 100,
        "cost": 0.053598999999999994,
        "run_time": "29.427 seconds"
      },
      "reached_cutoff": false
    },
    "TestReadFile": {
      "data_path": "agbenchmark/challenges/interface/read_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Write the string 'random string' before any existing text to the file called file_to_check.txt",
      "answer": "random string Hello World!",
      "description": "This reads the file quickly",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 100,
        "cost": 0.084753,
        "run_time": "29.95 seconds"
      },
      "reached_cutoff": false
    },
    "TestBasicRetrieval": {
      "data_path": "agbenchmark/challenges/retrieval/r1_book_price/data.json",
      "is_regression": true,
      "category": [
        "retrieval"
      ],
      "task": "Write the price of the book in this url 'http://books.toscrape.com/catalogue/meditations_33/index.html' to a .txt file.",
      "answer": "£25.89",
      "description": "Specifies specific website to retrieve website from.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "attempted": true,
        "success_%": 100,
        "cost": 0.07164450000000001,
        "run_time": "25.587 seconds"
      },
      "reached_cutoff": false
    },
    "TestBasicMemory": {
      "data_path": "agbenchmark/challenges/memory/m1_id/data.json",
      "is_regression": false,
      "category": [
        "memory"
      ],
      "task": "Follow the instructions in the instructions_1.txt file",
      "answer": "2314",
      "description": "Tests ability for the agent to remember information between each action. An id is presented initially and the agent has to remember it after reading 4 other files",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "attempted": true,
        "success_%": 10,
        "cost": 0.1716985,
        "run_time": "65.497 seconds"
      },
      "reached_cutoff": true
    },
    "TestDebugSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.1_guided/data.json",
      "is_regression": false,
      "category": [
        "code",
        "iterate"
      ],
      "task": "1- Run test.py.\n2- Read code.py.\n3- Modify code.py.\nRepeat step 1, 2 and 3 until test.py runs without errors.\n",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "attempted": true,
        "success_%": 90,
        "cost": 0.1352055,
        "run_time": "48.889 seconds"
      },
      "reached_cutoff": false
    },
    "TestAdaptLink": {
      "data_path": "agbenchmark/challenges/adapatability/a3_book_price/data.json",
      "is_regression": false,
      "category": [
        "adaptability"
      ],
      "task": "Write the price of the book in this url 'books.toscrape.com/catalogue/meditations_33/index.html' to a .txt file.",
      "answer": "£25.89",
      "description": "An advanced version of this -> remove.html as well. Same as TestBasicRetrieval but link is slightly broken, supposed to be http:// at the start.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.09185349999999999,
        "run_time": "33.651 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithoutGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.2_vague/data.json",
      "is_regression": false,
      "category": [
        "code",
        "iterate"
      ],
      "task": "Make test.py run without errors.",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it, using a very broad prompt without guidance",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.21467699999999998,
        "run_time": "80.638 seconds"
      },
      "reached_cutoff": true
    }
  },
  "config": {
    "workspace": "${os.path.join(Path.home(), 'miniagi')}"
  }
}