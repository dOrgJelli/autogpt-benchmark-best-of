{
  "command": "agbenchmark start",
  "benchmark_git_commit_sha": "https://github.com/Significant-Gravitas/Auto-GPT-Benchmarks/tree/1d1728a800a4caaf3eea45bdfc733ae82bddc173",
  "agent_git_commit_sha": "https://github.com/polywrap/PolyGPT/tree/d621adf5f54cc0f9a6d191139fb67ac3d1436d7b",
  "completion_time": "2023-08-17T08:33:27+00:00",
  "benchmark_start_time": "2023-08-17T08:13:44+00:00",
  "metrics": {
    "run_time": "1181.78 seconds",
    "highest_difficulty": "advanced: 5"
  },
  "tests": {
    "TestWriteFile": {
      "data_path": "agbenchmark/challenges/interface/write_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Write the word 'Washington' to a .txt file",
      "answer": "The word 'Washington', printed to a .txt file named anything",
      "description": "Tests the agents ability to write to a file",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 90,
        "cost": 0.08529,
        "run_time": "22.73 seconds"
      },
      "reached_cutoff": false
    },
    "TestSearch": {
      "data_path": "agbenchmark/challenges/interface/search/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Open 'https://silennaihin.com/random/plain.html' and paste all of the text on the page in a .txt file",
      "answer": "This is a Heading\nThis is a paragraph.",
      "description": "Tests if an llm can search",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.22743,
        "run_time": "36.881 seconds"
      },
      "reached_cutoff": false
    },
    "TestReadFile": {
      "data_path": "agbenchmark/challenges/interface/read_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Read the file called file_to_read.txt and write its content to a file called output.txt",
      "answer": "The content of output.txt should be 'Hello World!'",
      "description": "Tests the ability for an agent to read a file.",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.13938,
        "run_time": "33.873 seconds"
      },
      "reached_cutoff": false
    },
    "TestPlanCreation": {
      "data_path": "agbenchmark/challenges/content_gen/2_plan/data.json",
      "is_regression": true,
      "category": [
        "content_gen"
      ],
      "task": "As an agent powered by a large language model, create a plan for yourself based on the task of booking a flight to Toronto. Output this plan into a .txt file.",
      "answer": "1. Search for flights to Toronto.\n2. Select the cheapest flight.\n3. Book the flight.\n4. Pay for the flight.\n5. Confirm the flight.",
      "description": "Tests ability to generate content based on the content of 2 files.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.08990999999999999,
        "run_time": "23.71 seconds"
      },
      "reached_cutoff": false
    },
    "TestBasicRetrieval": {
      "data_path": "agbenchmark/challenges/retrieval/r1_book_price/data.json",
      "is_regression": false,
      "category": [
        "retrieval"
      ],
      "task": "Write the price of the book in this url 'http://books.toscrape.com/catalogue/meditations_33/index.html' to a .txt file.",
      "answer": "£25.89",
      "description": "Specifies specific website to retrieve website from.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "attempted": true,
        "success_%": 30,
        "cost": 0.2886,
        "run_time": "63.649 seconds"
      },
      "reached_cutoff": true
    },
    "TestBasicMemory": {
      "data_path": "agbenchmark/challenges/memory/m1_id/data.json",
      "is_regression": true,
      "category": [
        "memory"
      ],
      "task": "Follow the instructions in the instructions_1.txt file",
      "answer": "2314",
      "description": "Tests ability for the agent to remember information between each action. An id is presented initially and the agent has to remember it after reading 4 other files",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.37860000000000005,
        "run_time": "70.978 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.1_guided/data.json",
      "is_regression": true,
      "category": [
        "code",
        "iterate"
      ],
      "task": "1- Run test.py.\n2- Read code.py.\n3- Modify code.py.\nRepeat step 1, 2 and 3 until test.py runs without errors.\n",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "attempted": true,
        "success_%": 70,
        "cost": 0.1626,
        "run_time": "75.782 seconds"
      },
      "reached_cutoff": true
    },
    "TestRememberMultipleIds": {
      "data_path": "agbenchmark/challenges/memory/m2_multiple/data.json",
      "is_regression": true,
      "category": [
        "memory"
      ],
      "task": "Follow the instructions in the instructions_1.txt file",
      "answer": "3145\n3791\n9317\n9471",
      "description": "Tests ability for the agent to remember information between each action. Multiple ids are presented in different files and the last file instructs the agent to write these ids into another file.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.38004,
        "run_time": "56.855 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithoutGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.2_vague/data.json",
      "is_regression": true,
      "category": [
        "code",
        "iterate"
      ],
      "task": "Make test.py run without errors.",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it, using a very broad prompt without guidance",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "attempted": true,
        "success_%": 70,
        "cost": 0.23840999999999998,
        "run_time": "185.39 seconds"
      },
      "reached_cutoff": true
    },
    "TestRememberMultipleIdsWithNoise": {
      "data_path": "agbenchmark/challenges/memory/m3_noise/data.json",
      "is_regression": true,
      "category": [
        "memory"
      ],
      "task": "Follow the instructions in the instructions_1.txt file",
      "answer": "3145\n3791\n9317\n9471",
      "description": "Tests ability for the agent to remember information between each action. Multiple ids are presented in different files and the last file instructs the agent to write these ids into another file. Some noise is also added to the files to test the agent's ability to filter out noise.",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "attempted": true,
        "success_%": 80,
        "cost": 0.7052099999999999,
        "run_time": "85.906 seconds"
      },
      "reached_cutoff": false
    },
    "TestRememberMultiplePhrasesWithNoise": {
      "data_path": "agbenchmark/challenges/memory/m4_phrases/data.json",
      "is_regression": false,
      "category": [
        "memory"
      ],
      "task": "Follow the instructions in the instructions_1.txt file",
      "answer": "The purple elephant danced on a rainbow while eating a taco\nThe sneaky toaster stole my socks and ran away to Hawaii\nMy pet rock sings better than Beyoncé on Tuesdays\nThe giant hamster rode a unicycle through the crowded mall",
      "description": "Tests ability for the agent to remember information between each action. Multiple phrases are presented in different files and the last file instructs the agent to write these phrases into another file. Some noise is also added to the files to test the agent's ability to filter out noise.",
      "metrics": {
        "difficulty": "advanced",
        "success": true,
        "attempted": true,
        "success_%": 70,
        "cost": 0.71331,
        "run_time": "80.599 seconds"
      },
      "reached_cutoff": false
    }
  },
  "config": {
    "workspace": "workspace",
    "entry_path": "agbenchmark.benchmarks"
  }
}