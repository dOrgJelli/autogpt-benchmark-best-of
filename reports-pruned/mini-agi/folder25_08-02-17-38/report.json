{
  "command": "agbenchmark start",
  "git_commit_sha": "2fc70aa0032eec986dfb1020854a1b3b8aaf6780",
  "completion_time": "2023-08-02-17:56",
  "benchmark_start_time": "2023-08-02-17:38",
  "metrics": {
    "run_time": "1092.09 seconds",
    "highest_difficulty": "novice: 3"
  },
  "tests": {
    "TestWriteFile": {
      "data_path": "agbenchmark/challenges/interface/write_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Print the the capital of America to a .txt file",
      "answer": "Washington",
      "description": "Tests the writing to file",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.0529135,
        "run_time": "24.274 seconds"
      },
      "reached_cutoff": false
    },
    "TestSearch": {
      "data_path": "agbenchmark/challenges/interface/search/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Open 'https://silennaihin.com/random/plain.html' and paste the text on the page in a .txt file",
      "answer": "This is a Heading\nThis is a paragraph.",
      "description": "Tests if an llm can search",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.053307999999999994,
        "run_time": "21.565 seconds"
      },
      "reached_cutoff": false
    },
    "TestReadFile": {
      "data_path": "agbenchmark/challenges/interface/read_file/data.json",
      "is_regression": true,
      "category": [
        "interface"
      ],
      "task": "Write the string 'random string' before any existing text to the file called file_to_check.txt",
      "answer": "random string Hello World!",
      "description": "This reads the file quickly",
      "metrics": {
        "difficulty": "interface",
        "success": true,
        "success_%": 100,
        "cost": 0.059176,
        "run_time": "32.245 seconds"
      },
      "reached_cutoff": false
    },
    "TestBasicRetrieval": {
      "data_path": "agbenchmark/challenges/retrieval/r1_book_price/data.json",
      "is_regression": false,
      "category": [
        "retrieval"
      ],
      "task": "Write the price of the book in this url 'http://books.toscrape.com/catalogue/meditations_33/index.html' to a .txt file.",
      "answer": "Â£25.89",
      "description": "Specifies specific website to retrieve website from.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "success_%": 80,
        "cost": 0.071381,
        "run_time": "28.253 seconds"
      },
      "reached_cutoff": false
    },
    "TestBasicContentGen": {
      "data_path": "agbenchmark/challenges/content_gen/1_summary/data.json",
      "is_regression": false,
      "category": [
        "content_gen"
      ],
      "task": "Create a brief report or summary highlighting how one or more companies from companies.txt are addressing or capitalizing on challenges or trends from challenges.txt. Write a file called output.txt.",
      "answer": "A report highlighting elements from the 2 files.",
      "description": "Tests ability to generate content based on the content of 2 files.",
      "metrics": {
        "difficulty": "basic",
        "success": true,
        "success_%": 50,
        "cost": 0.057900999999999994,
        "run_time": "74.66 seconds"
      },
      "reached_cutoff": true
    },
    "TestDebugSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2_debug/data.json",
      "is_regression": true,
      "category": [
        "code",
        "iterate"
      ],
      "task": "1- Run test.py.\n2- Read code.py.\n3- Modify code.py.\nRepeat step 1, 2 and 3 until test.py runs without errors.\n",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it.",
      "metrics": {
        "difficulty": "novice",
        "success": true,
        "success_%": 100,
        "cost": 0.26614099999999996,
        "run_time": "49.059 seconds"
      },
      "reached_cutoff": false
    },
    "TestDebugSimpleTypoWithoutGuidance": {
      "data_path": "agbenchmark/challenges/code/c2_debug_suite/d2.1_vague/data.json",
      "is_regression": false,
      "category": [
        "code",
        "iterate"
      ],
      "task": "Make test.py run without errors.",
      "answer": "[0, 1] [2, 5] [0, 3]",
      "description": "Tests ability for the agent to debug python code with a simple typo in it, using a very broad prompt without guidance",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "success_%": 70,
        "cost": 0.1815675,
        "run_time": "61.409 seconds"
      },
      "reached_cutoff": false
    },
    "TestAdaptSimpleTypoWithGuidance": {
      "data_path": "agbenchmark/challenges/adapatability/a1_debug/data.json",
      "is_regression": false,
      "category": [
        "adaptability"
      ],
      "task": "1- Run code.py.\n2- Read test.py.\n3- Modify test.py.\nRepeat step 1, 2 and 3 until code.py runs without errors.\n",
      "answer": "Same as the original DebugWithGuidance test - [0, 1] [2, 5] [0, 3]",
      "description": "A version of the debug challenge where the wrong files to test and change are given. The llm must figure the challenges out",
      "metrics": {
        "difficulty": "intermediate",
        "success": true,
        "success_%": 50,
        "cost": 0.405656,
        "run_time": "78.031 seconds"
      },
      "reached_cutoff": true
    }
  },
  "config": {
    "workspace": "${os.path.join(Path.home(), 'miniagi')}"
  }
}